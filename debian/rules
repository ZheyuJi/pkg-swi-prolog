#!/usr/bin/make -f

include /usr/share/dpatch/dpatch.make

export PLARCH ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)
export DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
export DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
  CONFFLAGS += --build $(DEB_HOST_GNU_TYPE)
else
  CONFFLAGS += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

CFLAGS=
# Fix FTBFS on ARM
ifeq ($(PLARCH),arm)
	CFLAGS += -O0
endif

build: patch build-stamp
build-stamp:
	dh_testdir

	for DIR in src/ packages/xpce/src/ packages/xpce/ packages/jpl; do \
		cp -f /usr/share/misc/config.sub $$DIR/config.sub; \
		cp -f /usr/share/misc/config.guess $$DIR/config.guess; \
	done

	CFLAGS="$(CFLAGS)" PL="swipl" ./configure $(CONFFLAGS) --with-world \
		--prefix=/usr '--mandir=$${prefix}/share/man'

	$(MAKE) ARCH=$(PLARCH) PLARCH=$(PLARCH)

	touch $@

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Upstream's clean targets are too clean
	mv packages/xpce/src/h/names.i[hc] debian

	# Upstream's clean targets are not clean enough
	rm -f packages/xpce/man/reference/index.obj
	rm -f packages/xpce/lib/amd64
	rm -f .pkg-config

	[ ! -f Makefile ] || $(MAKE) ARCH=$(PLARCH) PLARCH=$(PLARCH) clean
	[ ! -f Makefile ] || $(MAKE) ARCH=$(PLARCH) PLARCH=$(PLARCH) distclean

	mv debian/names.i[hc] packages/xpce/src/h
	dh_clean

install:
install: build
	dh_testdir
	dh_testroot
	dh_clean -k

	# XPCE below needs a working SWI-Prolog to be installed; this is done
	# in a temporary installation directory. We generate a list of files
	# so we can seperate them later.

	$(MAKE) prefix=`pwd`/debian/swi-prolog-tmp/usr \
		PLBASE=`pwd`/debian/swi-prolog-tmp/usr/lib/swi-prolog \
		ARCH=$(PLARCH) install-lite

	cd debian/swi-prolog-tmp && find * -type f > ../swi-prolog.files
	cd debian/swi-prolog-tmp && find * -type l >> ../swi-prolog.files

	for i in "clib     clib" \
		 "http     http" \
		 "semweb   semweb" \
		 "sgml     sgml" \
		 "sgml/RDF sgml" \
		 "table    table" \
		 "xpce     tmp"; do \
		FROM=$$(echo $$i | cut -d " " -f1); \
		TO=$$(echo $$i | cut -d " " -f2); \
		mkdir -p `pwd`/debian/swi-prolog-$$TO/usr/lib/swi-prolog/library; \
		$(MAKE) -C packages/$$FROM \
			prefix=`pwd`/debian/swi-prolog-$$TO/usr \
			PLBASE=`pwd`/debian/swi-prolog-$$TO/usr/lib/swi-prolog \
			PLARCH=$(PLARCH) \
			PL=`pwd`/src/pl PLEXE=`pwd`/src/pl \
			install; \
	done

	# Seperate XPCE and basic SWI-Prolog
	dh_movefiles -p swi-prolog --sourcedir=debian/swi-prolog-tmp

	# Remove dbuild .pwd file (see #285894)
	rm -f debian/swi-prolog-xpce/usr/lib/swi-prolog/xpce/prolog/lib/.pwd
	
	# Empty directories remain, but XPCE depends on SWI-Prolog
	mv debian/swi-prolog-tmp debian/swi-prolog-xpce

	# These two links are absolute, but we want them relative
	cd debian/swi-prolog-xpce/usr/bin && \
		rm xpce; ln -s ../lib/swi-prolog/bin/*/xpce .; \
		rm xpce-client; ln -s ../lib/swi-prolog/xpce-*/bin/*/xpce-client .
	
	# Remove superfluous copies of the GPL
	rm -f debian/swi-prolog-xpce/usr/lib/swi-prolog/xpce-*/COPYING

	# Override lintian warnings
	for PKG in swi-prolog swi-prolog-xpce; do \
		mkdir -p debian/$$PKG/usr/share/lintian/overrides; \
		cp debian/$$PKG.lintian.override debian/$$PKG/usr/share/lintian/overrides/$$PKG; \
	done

	# Remove empty directories
	find debian/ -depth -type d -empty -exec rm -rfv {} \;

	# Remove RPATH from pl2xpce.so.
	chrpath --delete debian/swi-prolog-xpce/usr/lib/swi-prolog/xpce-*/lib/*/pl2xpce.so || true

binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installchangelogs -pswi-prolog-sgml packages/sgml/ChangeLog
	dh_installchangelogs -pswi-prolog-xpce packages/xpce/ChangeLog
	dh_installchangelogs -pswi-prolog-clib packages/clib/ChangeLog
	dh_installchangelogs -pswi-prolog-table packages/table/ChangeLog
	dh_installdocs
	dh_installmenu
	dh_installman
	dh_strip
	dh_link
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-indep: build install

binary-arch: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-a binary-common

binary-%: build install
	make -f debian/rules binary-common DH_OPTIONS=-p$*

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary-common binary install patch unpatch
